import { useState } from 'react'
import { Link, useNavigate } from 'react-router-dom'
import { ShoppingCart, Menu, X, User } from 'lucide-react'
import { useCart } from '../../context/CartContext'
import { useAuth } from '../../context/AuthContext'
import { motion, AnimatePresence } from 'framer-motion'
import logo from '../../assets/logo_big.png'

const Header = () => {
  const [isMenuOpen, setIsMenuOpen] = useState(false)
  const [isCartOpen, setIsCartOpen] = useState(false)
  const { state } = useCart()
  const { user, profile, isAdmin } = useAuth()
  const navigate = useNavigate()

  const totalItems = state.items.reduce((sum, item) => sum + item.quantity, 0)

  const handleCartClick = () => {
    navigate('/cart')
    setIsCartOpen(false)
    setIsMenuOpen(false)
  }

  const handleAccountClick = () => {
    navigate('/account')
    setIsMenuOpen(false)
  }

  const navigationLinks = [
    { href: '/', label: 'Home' },
    { href: '/products', label: 'Products' },
    { href: '/shirt-quality', label: 'Quality' },
  ]

  if (isAdmin) {
    navigationLinks.push({ href: '/admin', label: 'Admin Dashboard' })
  }

  return (
    <header className="bg-white shadow-md sticky top-0 z-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex justify-between items-center h-16">
          {/* Logo */}
          <Link to="/" className="flex items-center">
            <img src={logo} alt="Saffron Society" className="h-8 w-auto" />
          </Link>

          {/* Desktop Navigation */}
          <nav className="hidden md:flex items-center space-x-8">
            {navigationLinks.map((link) => (
              <Link
                key={link.href}
                to={link.href}
                className="text-gray-700 hover:text-orange-500 transition-colors"
              >
                {link.label}
              </Link>
            ))}
          </nav>

          {/* Icons */}
          <div className="flex items-center space-x-4">
            {/* User Account */}
            <button
              onClick={handleAccountClick}
              className="relative text-gray-700 hover:text-orange-500 transition-colors"
              aria-label="User account"
            >
              <User className="w-6 h-6" />
              {user && (
                <span className="absolute -bottom-1 -right-1 w-2 h-2 bg-green-500 rounded-full"></span>
              )}
            </button>

            {/* Cart */}
            <button
              onClick={handleCartClick}
              className="relative text-gray-700 hover:text-orange-500 transition-colors"
              aria-label="Shopping cart"
            >
              <ShoppingCart className="w-6 h-6" />
              {totalItems > 0 && (
                <span className="absolute -top-2 -right-2 bg-orange-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center">
                  {totalItems}
                </span>
              )}
            </button>

            {/* Mobile menu button */}
            <button
              className="md:hidden text-gray-700 hover:text-orange-500 transition-colors"
              onClick={() => setIsMenuOpen(!isMenuOpen)}
              aria-label="Toggle menu"
            >
              {isMenuOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
            </button>
          </div>
        </div>

        {/* Mobile Navigation */}
        <AnimatePresence>
          {isMenuOpen && (
            <motion.nav
              initial={{ opacity: 0, height: 0 }}
              animate={{ opacity: 1, height: 'auto' }}
              exit={{ opacity: 0, height: 0 }}
              className="md:hidden"
            >
              <div className="px-2 pt-2 pb-3 space-y-1">
                {navigationLinks.map((link) => (
                  <Link
                    key={link.href}
                    to={link.href}
                    className="block px-3 py-2 text-gray-700 hover:text-orange-500 transition-colors"
                    onClick={() => setIsMenuOpen(false)}
                  >
                    {link.label}
                  </Link>
                ))}
                <div className="border-t border-gray-200 pt-2 mt-2">
                  <button
                    onClick={handleAccountClick}
                    className="w-full text-left px-3 py-2 text-gray-700 hover:text-orange-500 transition-colors flex items-center gap-2"
                  >
                    <User className="w-4 h-4" />
                    {user ? `${profile?.full_name || 'My Account'}` : 'Sign In'}
                  </button>
                </div>
              </div>
            </motion.nav>
          )}
        </AnimatePresence>
      </div>
    </header>
  )
}

export default Header
